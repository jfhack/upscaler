#!/usr/bin/env python
import argparse
import subprocess
import sys

def parse_nargs(argv, name):
  if name not in argv:
    return argv, []
  index = argv.index(name)
  return argv[:index], argv[index+1:]

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument("-s", "--scale", type=int, default=2, help="Upscaling factor")
  parser.add_argument("--uid", type=int, default=1000, help="User ID")
  parser.add_argument("--gid", type=int, default=None, help="Group ID")
  parser.add_argument("--force-png-output", action="store_true", help="Force output to be PNG")
  parser.add_argument("--model", type=str, help="Model to use")
  parser.add_argument("--gfpgan-args", help="gfpgan original args", nargs='+', type=str)
  parser.add_argument("--realesrgan-args", help="realesrgan original args", nargs='+', type=str)

  argv = sys.argv[1:]

  argv, gfpgan_args = parse_nargs(argv, "--gfpgan-args")
  argv, realesrgan_args = parse_nargs(argv, "--realesrgan-args")

  args = parser.parse_args(argv)

  args.gfpgan_args = gfpgan_args
  args.realesrgan_args = realesrgan_args

  scale = args.scale
  uid = args.uid
  gid = args.gid

  command_args = ["python", "inference.py", "-s", str(scale), "--uid", str(uid)]

  if gid is not None:
    command_args.extend(["--gid", str(gid)])
  if args.model == "rudalle":
      print(f"Running:\n{args.model}")
      if args.force_png_output:
        command_args.append("--force-png-output")
      subprocess.run(command_args, cwd="./rudalle")

  elif args.model in ("g:1", "g:1.2", "g:1.3", "g:1.4", "g:RestoreFormer"):

      print(f"Running:\n{args.model}")
      if args.force_png_output:
        command_args.extend(["--ext", "png"])
      version = args.model.split(":")[1]
      command_args.extend(["-v", version])
      command_args.extend(args.gfpgan_args)
      subprocess.run(command_args, cwd="./gfpgan/GFPGAN")

  elif args.model in ("r:RealESRGAN_x4plus",
      "r:RealESRNet_x4plus", "r:RealESRGAN_x4plus_anime_6B",
      "r:RealESRGAN_x2plus", "r:realesr-animevideov3",
      "r:realesr-general-x4v3"):

      print(f"Running:\n{args.model}")
      if args.force_png_output:
        command_args.extend(["--ext", "png"])
      model_name = args.model.split(":")[1]
      command_args.extend(["--model_name", model_name])
      command_args.extend(args.realesrgan_args)
      subprocess.run(command_args, cwd="./realesrgan/Real-ESRGAN")

if __name__ == "__main__":
  main()
